# Workflow: Template describing an automated process
# Can be started manually, by schedule, or by repository events
name: "CI"

# Event: Repository activity that triggers workflows
# PRs, Issues, Comments, Commit & Push, ...
on:
  push:               # Pushes
    branches: [main]
  # pull_request:     # Pull requests
  # issue_comment:    # Issue comments

# Job: Sequence of tasks in a workflow
# Multiple jobs can run in parallel or in sequence with dependencies
jobs:
  # Build and test the code
  build:
    # Runner: Virtual machine that runs a job with a limited lifetime
    # GitHub hosted runners: Linux, macOS, Windows
    runs-on: ubuntu-latest

    # Steps: Individual tasks that can run commands, scripts or actions
    steps:
      # Action: Custom reusable unit of code
      # Available in the GitHub Marketplace
      # Shell scripts, JavaScript code, or Docker containers
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: "11"
          distribution: "temurin"
          cache: maven

      # Shell commands
      - name: Build and test with Maven
        shell: bash
        run: mvn clean package

      # Caching: Store and reuse artifacts across jobs and workflows
      - name: Cache plugin JAR ${{ env.PLUGIN_JAR }}
        uses: actions/upload-artifact@v3
        with:
          name: plugin-jar
          path: target/${{ env.PLUGIN_JAR }}

  # Deploy the plugin to the remote Neo4j server
  deploy:
    # Runner: Virtual machine that runs a job with a limited lifetime
    # GitHub hosted runners: Linux, macOS, Windows
    runs-on: ubuntu-latest

    # Dependencies: Jobs that must complete successfully before this job will run
    needs: [build] # this job depends on the build job

    # Steps: Individual tasks that can run commands, scripts or actions
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Restore plugin JAR ${{ env.PLUGIN_JAR }}
        uses: actions/download-artifact@v3
        id: download
        with:
          name: plugin-jar

      - name: Upload plugin JAR to remote Neo4j server using SCP
        uses: appleboy/scp-action@master # https://github.com/appleboy/scp-action
        with:
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USER }}
          key: ${{ secrets.REMOTE_SSH_KEY }}
          source: ${{ env.PLUGIN_JAR }}
          target: "." # target directory on remote server

      - name: Move plugin and update permissions
        uses: appleboy/ssh-action@master # https://github.com/appleboy/ssh-action
        with:
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USER }}
          key: ${{ secrets.REMOTE_SSH_KEY }}
          script_stop: true
          script: |
            sudo mv ${{ env.PLUGIN_JAR }} ${{ env.PLUGIN_DIR }}

            sudo chown neo4j:neo4j ${{ env.PLUGIN_DIR }}/${{ env.PLUGIN_JAR }}

            sudo chmod +x ${{ env.PLUGIN_DIR }}/${{ env.PLUGIN_JAR }}

      - name: Restart Neo4j service 
        uses: appleboy/ssh-action@master # https://github.com/appleboy/ssh-action
        with:
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USER }}
          key: ${{ secrets.REMOTE_SSH_KEY }}
          script_stop: true
          script: |
            sudo systemctl restart neo4j
            sudo systemctl status -l neo4j.service

env:
  PLUGIN_JAR: "example-1.0.0.jar"
  PLUGIN_DIR: "/var/lib/neo4j/plugins"

