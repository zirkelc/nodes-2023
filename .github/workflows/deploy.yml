name: "Deploy"

on:
  workflow_call:
    inputs:
      plugin_artifact:
        description: "Plugin artifact from build workflow"
        type: string
        required: true
  workflow_dispatch:
    inputs:
      plugin_artifact:
        description: "Plugin artifact from build workflow"
        type: string
        required: true

env:
  # Restart Neo4j service after deploy
  RESTART_NEO4J_SERVICE: true
  # Remote host of EC2 instance
  REMOTE_HOST: "ec2-34-253-89-33.eu-west-1.compute.amazonaws.com"
  # Remote user on EC2 instance
  REMOTE_USER: "ec2-user"
  # SSH key file within repository
  REMOTE_SSH_KEY_FILE: "nebula-ssh-key.pem"
  # SSH key content
  REMOTE_SSH_KEY_CONTENT: ""
  # Passphrase to decrypt SSH key
  REMOTE_SSH_KEY_PASSPHRASE: ""

jobs:
  deploy:
    runs-on: ubuntu-latest
    name: Deploy
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      # Download plugin artifact from the build workflow
      # https://github.com/marketplace/actions/download-workflow-artifact
      # - name: Download plugin artifact
      #   uses: dawidd6/action-download-artifact@v2.24.3
      #   with:
      #     workflow: build.yml
      #     name: ${{ inputs.plugin_artifact }}

      - name: Download plugin artifact
        uses: actions/download-artifact@v3
        with:
          name: ${{ inputs.plugin_artifact }}

      - name: Upload plugin to remote Neo4j server
        if: success()
        uses: appleboy/scp-action@master
        with:
          host: ${{ env.REMOTE_HOST }}
          username: ${{ env.REMOTE_USER }}
          key: ${{ env.REMOTE_SSH_KEY_CONTENT }}
          key_path: ${{ env.REMOTE_SSH_KEY_FILE }}
          passphrase: ${{ env.REMOTE_SSH_KEY_PASSPHRASE }}
          source: ${{ inputs.plugin_artifact }} # source on local machine
          target: "." # target directory on remote server

      - name: Prepare plugin file path
        if: ${{ success() }}
        shell: bash
        run: |
          PLUGIN_FILE=$(basename ${{ inputs.plugin_artifact }})
          echo "PLUGIN_FILE=$(basename ${{ inputs.plugin_artifact }})" >> $GITHUB_ENV
          echo "PLUGIN_DIR=/var/lib/neo4j/plugins" >> $GITHUB_ENV
          echo "PLUGIN_PATH=/var/lib/neo4j/plugins/$(basename ${{ inputs.plugin_artifact }})" >> $GITHUB_ENV
          echo "PLUGIN_PREFIX=$(sed -rn "s/^(.*)-[0-9]+\.[0-9]+\.[0-9]+\.jar$/\1/p" <<< $PLUGIN_FILE)" >> $GITHUB_ENV

      - name: Rename old version of plugin
        if: success()
        uses: appleboy/ssh-action@master
        env:
          PLUGIN_DIR: ${{ env.PLUGIN_DIR }}
          PLUGIN_PREFIX: ${{ env.PLUGIN_PREFIX }} # the plugin name without version
        with:
          host: ${{ env.REMOTE_HOST }}
          username: ${{ env.REMOTE_USER }}
          key: ${{ env.REMOTE_SSH_KEY_CONTENT }}
          key_path: ${{ env.REMOTE_SSH_KEY_FILE }}
          passphrase: ${{ env.REMOTE_SSH_KEY_PASSPHRASE }}
          envs: PLUGIN_DIR,PLUGIN_PREFIX
          script_stop: true
          script: |
            cd $PLUGIN_DIR
            echo "List previous version of plugin with prefix $PLUGIN_PREFIX"
            find . -iname "$PLUGIN_PREFIX*.jar"
            echo "Append suffix .old to all previous versions"
            sudo find . -iname "$PLUGIN_PREFIX*.jar" -exec rename .jar .jar.old '{}' \;

      - name: Move plugin to target directory and update permissions
        if: success()
        uses: appleboy/ssh-action@master
        env:
          PLUGIN_FILE: ${{ env.PLUGIN_FILE }}
          PLUGIN_PATH: ${{ env.PLUGIN_PATH }}
        with:
          host: ${{ env.REMOTE_HOST }}
          username: ${{ env.REMOTE_USER }}
          key: ${{ env.REMOTE_SSH_KEY_CONTENT }}
          key_path: ${{ env.REMOTE_SSH_KEY_FILE }}
          passphrase: ${{ env.REMOTE_SSH_KEY_PASSPHRASE }}
          envs: PLUGIN_FILE,PLUGIN_PATH
          script_stop: true
          script: |
            echo "Moving $PLUGIN_FILE to $PLUGIN_PATH"
            sudo mv $PLUGIN_FILE $PLUGIN_PATH
            echo "Changing owner and group to neo4j:neo4j"
            sudo chown -R neo4j:neo4j $PLUGIN_PATH
            echo "Changing mode to executable"
            sudo chmod +x $PLUGIN_PATH

      - name: Restart Neo4j serice
        if: success() && env.RESTART_NEO4J_SERVICE
        uses: appleboy/ssh-action@master
        with:
          host: ${{ env.REMOTE_HOST }}
          username: ${{ env.REMOTE_USER }}
          key: ${{ env.REMOTE_SSH_KEY_CONTENT }}
          key_path: ${{ env.REMOTE_SSH_KEY_FILE }}
          passphrase: ${{ env.REMOTE_SSH_KEY_PASSPHRASE }}
          script_stop: true
          script: |
            cd $PLUGIN_DIR
            echo "Restart Neo4j service"
            sudo systemctl restart neo4j
            sudo systemctl status -l neo4j.service
